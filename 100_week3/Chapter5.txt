5.5.2

1. Currently dep_time and sched_dep_time are convenient to look at, but hard to compute with because theyâ€™re not really continuous numbers. Convert them to a more convenient representation of number of minutes since midnight.


> transmute(flights,
+           dep_time,
+           dep_hour = dep_time %/% 100,
+           dep_minute = dep_time %% 100,
+           dep_min_from_midnight = (dep_hour * 60) + dep_minute,
+           sched_dep_time,
+           sched_dep_hour = sched_dep_time %/% 100,
+           sched_dep_minute = sched_dep_time %% 100,
+           sched_dep_min_from_midnight = (sched_dep_hour * 60) + sched_dep_minute,
+ )

2.    Compare air_time with arr_time - dep_time. What do you expect to see? What do you see? What do you need to do to fix it?

Differences because times cannot be directly subtracted.
Differences.
Convert times to minutes, then subtract them.

3. Compare dep_time, sched_dep_time, and dep_delay. How would you expect those three numbers to be related?
dep_time and sched_dep_time are times.. Delay is in minutes. If they were all in the same units, subtracting dep_time with sched_dep_time would result in dep_delay


4. Find the 10 most delayed flights using a ranking function. How do you want to handle ties? Carefully read the documentation for min_rank().
> View(head(arrange(flights, ranked = min_rank(desc(dep_delay))), 10))


5. What does 1:3 + 1:10 return? Why?
> 1:3 + 1:10
 [1]  2  4  6  5  7  9  8 10 12 11
Warning message:
In 1:3 + 1:10 :
  longer object length is not a multiple of shorter object length

  Because it is adding dissimilar vectors

6. What trigonometric functions does R provide?

cos(x)
sin(x)
tan(x)

acos(x)
asin(x)
atan(x)
atan2(y, x)

cospi(x)
sinpi(x)
tanpi(x)



SECTION 5.6.7

2. Come up with another approach that will give you the same output as not_cancelled %>% count(dest) and not_cancelled %>% count(tailnum, wt = distance) (without using count()).

not_cancelled %>% group_by(dest) %>% summarize(n())
not_cancelled %>% group_by(tailnum) %>% summarize(sum(distance))

3. Our definition of cancelled flights (is.na(dep_delay) | is.na(arr_delay) ) is slightly suboptimal. Why? Which is the most important column?
? Because arr_delay is more important?

4. Look at the number of cancelled flights per day. Is there a pattern? Is the proportion of cancelled flights related to the average delay?



5. Which carrier has the worst delays? Challenge: can you disentangle the effects of bad airports vs. bad carriers? Why/why not? (Hint: think about flights %>% group_by(carrier, dest) %>% summarise(n()))



6. What does the sort argument to count() do. When might you use it?